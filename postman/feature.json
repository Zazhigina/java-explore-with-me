{
	"info": {
		"_postman_id": "16b9c0cf-2991-4b62-95e1-9279aea31c48",
		"name": "feature_comments",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "28423278"
	},
	"item": [
		{
			"name": "Добавление комментария",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);   \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Comment for event  from user \"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/:eventId/comment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						":eventId",
						"comment"
					],
					"variable": [
						{
							"key": "userId",
							"value": "3"
						},
						{
							"key": "eventId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "получение комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json(); // получаем тело ответа в формате JSON\r",
							"\r",
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.be.ok; // код ответа должен быть равен 200 OK\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"    pm.expect(body).is.an('array'); // проверяем, что тело ответа является массивом \r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comment"
					],
					"variable": [
						{
							"key": "userId",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.be.ok; // код ответа должен быть равен 200 OK\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Update Comment for event 1 from user 2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comment/:commentId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comment",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "3"
						},
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "получение обновленного комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json(); // получаем тело ответа в формате JSON\r",
							"\r",
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.be.ok; // код ответа должен быть равен 200 OK\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"    pm.expect(body).is.an('array'); // проверяем, что тело ответа является массивом \r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comment"
					],
					"variable": [
						{
							"key": "userId",
							"value": "3"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": " http://localhost:8080"
		},
		{
			"key": "Event ID",
			"value": "{(eid)}"
		},
		{
			"key": "eid",
			"value": "eid"
		},
		{
			"key": "uid",
			"value": "uid"
		}
	]
}